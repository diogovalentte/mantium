name: Build and push Docker image
on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Build target (api or dashboard)'
        required: true
        default: dashboard
      image_name:
        description: 'Base image name (ex: mantium)'
        required: false
        default: mantium
      tag:
        description: 'Tag to push (ex: latest)'
        required: false
        default: latest
      push:
        description: 'Push to ghcr.io? (true/false)'
        required: false
        default: 'true'

permissions:
  contents: read
  packages: write

concurrency:
  group: build-and-push-${{ github.repository }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-platform builds)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        if: ${{ github.event.inputs.push == 'true' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare build context
        id: prepare
        run: |
          TARGET=${{ github.event.inputs.target }}
          if [ "$TARGET" = "api" ]; then
            DOCKERFILE="Dockerfile_API"
            SUFFIX="-api"
          elif [ "$TARGET" = "dashboard" ]; then
            DOCKERFILE="Dockerfile_dashboard"
            SUFFIX="-dashboard"
          else
            echo "Invalid target: $TARGET"
            exit 1
          fi

          IMAGE_BASE=${REGISTRY}/${{ github.repository_owner }}/${{ github.event.inputs.image_name }}${SUFFIX}
          IMAGE_TAG=${IMAGE_BASE}:${{ github.event.inputs.tag }}
          IMAGE_SHA=${IMAGE_BASE}:${{ github.sha }}

          echo "dockerfile=$DOCKERFILE" >> $GITHUB_OUTPUT
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "image_sha=$IMAGE_SHA" >> $GITHUB_OUTPUT
          echo "suffix=$SUFFIX" >> $GITHUB_OUTPUT

      - name: Build and push image (multi-platform)
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./${{ steps.prepare.outputs.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event.inputs.push == 'true' }}
          tags: |
            ${{ steps.prepare.outputs.image_tag }}
            ${{ steps.prepare.outputs.image_sha }}

      - name: Show pushed image references
        if: ${{ github.event.inputs.push == 'true' }}
        run: |
          echo "Build target: ${{ github.event.inputs.target }}"
          echo "Dockerfile used: ${{ steps.prepare.outputs.dockerfile }}"
          echo "Image suffix: ${{ steps.prepare.outputs.suffix }}"
          echo "Image tags pushed:"
          echo "  ${{ steps.prepare.outputs.image_tag }}"
          echo "  ${{ steps.prepare.outputs.image_sha }}"
          echo "Build digest: ${{ steps.build-and-push.outputs.digest }}"
