name: Create and publish a container image

on:
  push:
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  DASHBOARD_IMAGE_NAME: ${{ github.repository }}-dashboard
  API_IMAGE_NAME: ${{ github.repository }}-api

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Extract metadata (tags, labels) for dashboard Docker
        id: dashboard-image-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.DASHBOARD_IMAGE_NAME }}

      - name: Extract metadata (tags, labels) for API Docker
        id: api-image-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.API_IMAGE_NAME }}

      - name: Build and push dashboard Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile_dashboard
          push: true
          provenance: false
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.dashboard-image-meta.outputs.tags }}
          labels: ${{ steps.dashboard-image-meta.outputs.labels }}

      - name: Build and push API Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile_API
          push: true
          provenance: false
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.api-image-meta.outputs.tags }}
          labels: ${{ steps.api-image-meta.outputs.labels }}

      - name: Create payload file
        run: |
          REPO_FULL="${{ github.repository }}"
          REPO_NAME="${REPO_FULL##*/}"
          echo "{\"repository\": {\"name\": \"${REPO_NAME}\"}}" > payload.json

      - name: Send GitHub webhook
        env:
          WEBHOOK_SERVER: ${{ secrets.WEBHOOK_SERVER }}
          WEBHOOK_SERVER_SECRET: ${{ secrets.WEBHOOK_SERVER_SECRET }}
          EVENT: push
          PAYLOAD_FILE: payload.json
        run: |
          SIG="sha256=$(openssl dgst -sha256 -hmac "$WEBHOOK_SERVER_SECRET" "$PAYLOAD_FILE" | sed 's/^.* //')"
          DELIVERY_ID=$(uuidgen)
          curl -X POST "$WEBHOOK_SERVER" \
            -H "Content-Type: application/json" \
            -H "X-Hub-Signature-256: $SIG" \
            -H "X-GitHub-Event: $EVENT" \
            -H "X-GitHub-Delivery: $DELIVERY_ID" \
            --data-binary "@$PAYLOAD_FILE"
