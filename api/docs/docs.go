// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/custom_manga": {
            "post": {
                "description": "Inserts a custom manga into the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add custom manga",
                "parameters": [
                    {
                        "description": "Manga data",
                        "name": "manga",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.AddCustomMangaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/custom_manga/last_read_chapter": {
            "patch": {
                "description": "Updates a custom manga last read chapter in the database. If chapter not in body, set the last read chapter to the last released chapter if it exists, else set it to none. If both ` + "`" + `chapter` + "`" + ` and ` + "`" + `chapter_url` + "`" + ` are empty strings in the body, deletes the manga's last read chapter. You can't provide only the chapter_url. You must provide either the manga ID or the manga URL.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update custom manga last read chapter",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"https://mangadex.org/title/1/one-piece\"",
                        "description": "Manga URL",
                        "name": "url",
                        "in": "query"
                    },
                    {
                        "description": "Chapter",
                        "name": "chapter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.UpdateMangaLastReadChapterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/custom_manga/last_released_chapter_selectors": {
            "patch": {
                "description": "Update custom manga last released chapter selectors.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update custom manga last released chapter selectors",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"https://mangadex.org/title/1/one-piece\"",
                        "description": "Manga current URL",
                        "name": "url",
                        "in": "query"
                    },
                    {
                        "description": "Selectors data",
                        "name": "manga",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.UpdateLastReleasedChapterSelectorsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/custom_manga/name": {
            "patch": {
                "description": "Updates a custom manga name in the database. You must provide either the manga ID or the manga URL.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update custom manga name",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"https://mangadex.org/title/1/one-piece\"",
                        "description": "Manga current URL",
                        "name": "url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"One Piece\"",
                        "description": "New manga name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/dashboard/configs": {
            "get": {
                "description": "Returns the dashboard configs",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the dashboard configs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/config.DashboardConfigs"
                        }
                    }
                }
            },
            "post": {
                "description": "Update the dashboard configs in the DB. Cannot update version.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update dashboard configs",
                "parameters": [
                    {
                        "description": "Dashboard configs",
                        "name": "configs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.DashboardConfigs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/dashboard/last_background_error": {
            "get": {
                "description": "Returns the last error that happened in the background. Usually used to display the error in the dashboard.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the last background error",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dashboard.BackgroundError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the last error that happened in the background. Usually used to clear the error in the dashboard.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the last background error",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/dashboard/last_update": {
            "get": {
                "description": "Returns the last time a resource that should trigger an update in the iframe/dashboard was updated. Usually used to update the dashboard when an event not triggered by the user occurs.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the last update date",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/dashboard/updated_message": {
            "get": {
                "description": "Get's the updated message for this version and deletes so it won't be shown again. Returns the message and the updated version.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get's the updated message for this version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns status OK",
                "produces": [
                    "text/plain"
                ],
                "summary": "Health check route",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manga": {
            "get": {
                "description": "Gets a manga from the database. You must provide either the manga ID or the manga URL.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get manga",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"https://mangadex.org/title/1/one-piece\"",
                        "description": "Manga URL",
                        "name": "url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"manga\": mangaObj}",
                        "schema": {
                            "$ref": "#/definitions/manga.Manga"
                        }
                    }
                }
            },
            "post": {
                "description": "Gets a manga metadata from source and inserts into the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add manga",
                "parameters": [
                    {
                        "description": "Manga data",
                        "name": "manga",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.AddMangaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a manga from the database. You must provide either the manga ID or the manga URL.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete manga",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"https://mangadex.org/title/1/one-piece\"",
                        "description": "Manga URL",
                        "name": "url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/manga/chapters": {
            "get": {
                "description": "Get a manga chapters from the source. You must provide either the manga ID or the manga URL.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get manga chapters",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"https://mangadex.org/title/1/one-piece\"",
                        "description": "Manga URL",
                        "name": "url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"1as4fa7\"",
                        "description": "Manga Internal ID",
                        "name": "manga_internal_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"chapters\": [chapterObj]}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/manga.Chapter"
                            }
                        }
                    }
                }
            }
        },
        "/manga/cover_img": {
            "patch": {
                "description": "Updates a manga/custom manga cover image in the database. You must provide either the manga ID or the manga URL. You must provide only one of the following: cover_img, cover_img_url, get_cover_img_from_source. If it's a custom manga, using get_cover_img_from_source will return an error message.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update manga cover image",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"https://mangadex.org/title/1/one-piece\"",
                        "description": "Manga URL",
                        "name": "url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"1as4fa7\"",
                        "description": "Manga Internal ID",
                        "name": "manga_internal_id",
                        "in": "query"
                    },
                    {
                        "type": "file",
                        "description": "Manga cover image file. Remember to set the Content-Type header to 'multipart/form-data' when sending the request.",
                        "name": "cover_img",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "\"https://example.com/cover.jpg\"",
                        "description": "Manga cover image URL",
                        "name": "cover_img_url",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "Let Mantium fetch the cover image from the source site",
                        "name": "get_cover_img_from_source",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "Update manga cover image to  Mantium's default cover image",
                        "name": "use_mantium_default_img",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/manga/metadata": {
            "get": {
                "description": "Gets the metadata for a manga from the source site.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get manga metadata",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"https://mangadex.org/title/1/one-piece\"",
                        "description": "Manga URL",
                        "name": "url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"manga\": mangaObj}",
                        "schema": {
                            "$ref": "#/definitions/manga.Manga"
                        }
                    }
                }
            }
        },
        "/manga/status": {
            "patch": {
                "description": "Updates a manga status in the database. You must provide either the manga ID or the manga URL.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update manga status",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"https://mangadex.org/title/1/one-piece\"",
                        "description": "Manga URL",
                        "name": "url",
                        "in": "query"
                    },
                    {
                        "description": "Manga status",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.UpdateMangaStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/manga/url": {
            "patch": {
                "description": "Updates a custom manga URL in the database. You must provide either the manga ID or the manga current URL.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update custom manga URL",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"https://mangadex.org/title/1/one-piece\"",
                        "description": "Manga current URL",
                        "name": "url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"https://mangadex.org/title/2/two-piece\"",
                        "description": "Manga new URL ",
                        "name": "new_url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/mangas": {
            "get": {
                "description": "Gets the current manga of multimangas and all custom mangas.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get mangas",
                "responses": {
                    "200": {
                        "description": "{\"mangas\": [mangaObj]}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/manga.Manga"
                            }
                        }
                    }
                }
            }
        },
        "/mangas/add_to_kaizoku": {
            "post": {
                "description": "Add the multimangas' current manga to Kaizoku. If it fails to add a manga, it will continue with the next manga. This is a heavy operation depending on the number of mangas in the database.",
                "produces": [
                    "application/json"
                ],
                "summary": "Add mangas to Kaizoku",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "Filter which mangas to add by status. 1=reading, 2=completed, 3=on hold, 4=dropped, 5=plan to read. Example: status=1,2,3,5",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/mangas/add_to_suwayomi": {
            "post": {
                "description": "Add the multimangas' current manga to Suwayomi. If it fails to add a manga, it will continue with the next manga. This is a heavy operation depending on the number of mangas in the database.",
                "produces": [
                    "application/json"
                ],
                "summary": "Add mangas to Suwayomi",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "Filter which mangas to add by status. 1=reading, 2=completed, 3=on hold, 4=dropped, 5=plan to read. Example: status=1,2,3,5",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/mangas/add_to_tranga": {
            "post": {
                "description": "Add the multimangas' current manga to Tranga. If it fails to add a manga, it will continue with the next manga. This is a heavy operation depending on the number of mangas in the database. Currently, only MangaDex mangas can be added to Tranga, but it'll try all mangas anyway.",
                "produces": [
                    "application/json"
                ],
                "summary": "Add mangas to Tranga",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "Filter which mangas to add by status. 1=reading, 2=completed, 3=on hold, 4=dropped, 5=plan to read. Example: status=1,2,3,5",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/mangas/iframe": {
            "get": {
                "description": "Returns an iFrame with mangas. Only mangas with unread chapters, and status reading or completed. Sort by last released chapter date.",
                "produces": [
                    "text/html"
                ],
                "summary": "Mangas iFrame",
                "parameters": [
                    {
                        "type": "string",
                        "example": "https://sub.domain.com",
                        "description": "API URL used by your browser. Used for the button that updates the last read chater, as your browser needs to send a request to the API to update the chapter.",
                        "name": "api_url",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "light",
                        "description": "IFrame theme, defaults to light. If it's different from your dashboard theme, the background turns may turn white",
                        "name": "theme",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 5,
                        "description": "Limits the number of items in the iFrame.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "If true, shows a warning in the iFrame if an error occurred in the background. Defaults to true.",
                        "name": "showBackgroundErrorWarning",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HTML content",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mangas/metadata": {
            "patch": {
                "description": "Get the mangas metadata from the sources and update them in the database.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update mangas metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notify if a new chapter was released for the manga (only of mangas with status reading or completed).",
                        "name": "notify",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/mangas/search": {
            "post": {
                "description": "Searches a manga in the source. You must provide the source name like \"mangadex\" and the search query.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Search manga",
                "parameters": [
                    {
                        "description": "Search data",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.SearchMangaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"mangas\": [mangaSearchResultObj]}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.MangaSearchResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mangas/stats": {
            "get": {
                "description": "Get the library stats from all multimangas and custom mangas.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get library stats",
                "responses": {
                    "200": {
                        "description": "{\"property\": value}",
                        "schema": {
                            "type": "map"
                        }
                    }
                }
            }
        },
        "/multimanga": {
            "get": {
                "description": "Gets a multimanga from the database.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get multimanga",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Multimanga ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"multimanga\": multimangaObj}",
                        "schema": {
                            "$ref": "#/definitions/manga.MultiManga"
                        }
                    }
                }
            },
            "post": {
                "description": "Gets a manga metadata from source and inserts it as the current manga of a new multimanga into the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add multimanga",
                "parameters": [
                    {
                        "description": "Current manga data",
                        "name": "manga",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.AddMangaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a multimanga from the database.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete multimanga",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Multimanga ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/multimanga/chapters": {
            "get": {
                "description": "Get chapters of the current manga of a multimanga from the source.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get multimanga current manga chapters",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Multimanga ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"chapters\": [chapterObj]}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/manga.Chapter"
                            }
                        }
                    }
                }
            }
        },
        "/multimanga/choose_current_manga": {
            "get": {
                "description": "Check a multimanga mangas and returns which manga should be the current manga.",
                "produces": [
                    "application/json"
                ],
                "summary": "Choose current manga",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Multimanga ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"1,2,3\"",
                        "description": "Manga IDs to exclude from the check",
                        "name": "exclude_manga_ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"manga\": mangaObj}",
                        "schema": {
                            "$ref": "#/definitions/manga.Manga"
                        }
                    }
                }
            }
        },
        "/multimanga/cover_img": {
            "patch": {
                "description": "Updates a multimanga cover image in the database. You must provide only one of the following: cover_img, cover_img_url, use_current_manga_cover_img.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update multimanga cover image",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Multimanga ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Multimanga cover image file. Remember to set the Content-Type header to 'multipart/form-data' when sending the request.",
                        "name": "cover_img",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "\"https://example.com/cover.jpg\"",
                        "description": "Multimanga cover image URL",
                        "name": "cover_img_url",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "Use the multimanga's current manga cover image",
                        "name": "use_current_manga_cover_img",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/multimanga/last_read_chapter": {
            "patch": {
                "description": "Updates a multimanga last read chapter in the database. It also needs to know from which manga the chapter is from. If both ` + "`" + `chapter` + "`" + ` and ` + "`" + `chapter_url` + "`" + ` are empty strings in the body, set the last read chapter to the last released chapter in the database.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update multimanga last read chapter",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Multimanga ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "manga_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Chapter",
                        "name": "chapter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.UpdateMangaLastReadChapterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/multimanga/manga": {
            "post": {
                "description": "Adds a manga to a multimanga list in the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add manga to multimanga list",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Multimanga ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Manga data",
                        "name": "manga",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.AddMangaToMultiMangaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a manga from a multimanga list in the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Remove manga from multimanga list",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Multimanga ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "manga_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/multimanga/status": {
            "patch": {
                "description": "Updates a multimanga status in the database.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update multimanga status",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Multimanga ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Multimanga status",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.UpdateMangaStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/multimangas": {
            "get": {
                "description": "Gets all multimangas. The multimanga's mangas will have only the current manga. The current manga will have a possible wrong status, so use the multimanga's status.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get multimangas",
                "responses": {
                    "200": {
                        "description": "{\"multimangas\": [multimangaObj]}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/manga.MultiManga"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "config.DashboardConfigs": {
            "type": "object",
            "properties": {
                "display": {
                    "type": "object",
                    "properties": {
                        "columns": {
                            "type": "integer"
                        },
                        "displayMode": {
                            "type": "string"
                        },
                        "searchResultsLimit": {
                            "type": "integer"
                        },
                        "showBackgroundErrorWarning": {
                            "type": "boolean"
                        }
                    }
                },
                "integrations": {
                    "type": "object",
                    "properties": {
                        "addAllMultiMangaMangasToDownloadIntegrations": {
                            "type": "boolean"
                        },
                        "enqueueAllSuwayomiChaptersToDownload": {
                            "type": "boolean"
                        }
                    }
                },
                "manga": {
                    "type": "object",
                    "properties": {
                        "allowedAddingMethods": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "allowedSources": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "mantium": {
                    "type": "object",
                    "properties": {
                        "version": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "dashboard.BackgroundError": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Error message.",
                    "type": "string"
                },
                "time": {
                    "description": "Time when the error occurred.",
                    "type": "string"
                }
            }
        },
        "manga.Chapter": {
            "type": "object",
            "properties": {
                "chapter": {
                    "description": "Chapter usually is the chapter number, but in some cases it can be a one-shot or a special chapter",
                    "type": "string"
                },
                "internalID": {
                    "description": "InteralID is a unique identifier for the chapter in the source",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the name of the chapter",
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "updatedAt": {
                    "description": "UpdatedAt is the time when the chapter was released or updated (read).\nShould truncate at the second.\nThe timezone should be the default/system timezone.",
                    "type": "string"
                },
                "url": {
                    "description": "URL is the URL of the chapter\nIf custom manga chapter doesn't have a URL provided by the user, it should be like http://custom_manga/\u003cuuid\u003e.",
                    "type": "string"
                }
            }
        },
        "manga.HTMLSelector": {
            "type": "object",
            "required": [
                "Selector"
            ],
            "properties": {
                "Attribute": {
                    "type": "string"
                },
                "Regex": {
                    "type": "string"
                },
                "Selector": {
                    "type": "string"
                }
            }
        },
        "manga.Manga": {
            "type": "object",
            "properties": {
                "coverImg": {
                    "description": "CoverImg is the cover image of the manga",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "coverImgFixed": {
                    "description": "CoverImgFixed is true if the cover image is fixed. If true, the cover image will not be updated when updating the manga metadata.\nIt's used for when the cover image is manually set by the user.",
                    "type": "boolean"
                },
                "coverImgResized": {
                    "description": "CoverImgResized is true if the cover image was resized",
                    "type": "boolean"
                },
                "coverImgURL": {
                    "description": "CoverImgURL is the URL of the cover image",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "internalID": {
                    "description": "InteralID is a unique identifier for the manga in the source",
                    "type": "string"
                },
                "lastReadChapter": {
                    "description": "LastReadChapter is the last chapter read by the user\nIn a custom manga, this field represents the next manga the user should read\nor, if it's equal to the last released chapter, the manga is considered read.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/manga.Chapter"
                        }
                    ]
                },
                "lastReleasedChapter": {
                    "description": "LastReleasedChapter is the last chapter released by the source\nIf the custom manga has no more released chapter, it'll be equal to the LastReadChapter.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/manga.Chapter"
                        }
                    ]
                },
                "lastReleasedChapterNameSelector": {
                    "description": "LastReleasedChapterNameSelector is the selector used to find the last released chapter name in the source website",
                    "allOf": [
                        {
                            "$ref": "#/definitions/manga.HTMLSelector"
                        }
                    ]
                },
                "lastReleasedChapterURLSelector": {
                    "description": "LastReleasedChapterURLSelector is the selector used to find the last released chapter URL in the source website",
                    "allOf": [
                        {
                            "$ref": "#/definitions/manga.HTMLSelector"
                        }
                    ]
                },
                "multiMangaID": {
                    "description": "When the manga is part of a multimanga, this field should be set to the multimanga ID",
                    "type": "integer"
                },
                "name": {
                    "description": "Name is the name of the manga",
                    "type": "string"
                },
                "preferredGroup": {
                    "description": "PreferredGroup is the preferred group that translates (and more) the manga.\nNot all sources have multiple groups. Currently not used.",
                    "type": "string"
                },
                "searchNames": {
                    "description": "SearchNames should be the multimanga's mangas names.\nUsed for searching mangas by name.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source": {
                    "description": "Source is the source of the manga, usually the domain of the website.\nIf source is the above CustomMangaSource const, it means the manga is a custom manga created by the user.\nand without a source site.",
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "url": {
                    "description": "URL is the URL of the manga.\nIf custom manga doesn't have a URL provided by the user, it should be like above CustomMangaSource/\u003cuuid\u003e.",
                    "type": "string"
                }
            }
        },
        "manga.MultiManga": {
            "type": "object",
            "properties": {
                "coverImg": {
                    "description": "CoverImg is the cover image of the multimanga",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "coverImgFixed": {
                    "description": "CoverImgFixed is true if the cover image is fixed. If false (default) the current manga's cover image should be used.\nElse, use the multimanga's cover image fields.\nIt's used for when the cover image is manually set by the user.",
                    "type": "boolean"
                },
                "coverImgResized": {
                    "description": "CoverImgResized is true if the cover image was resized",
                    "type": "boolean"
                },
                "coverImgURL": {
                    "description": "CoverImgURL is the URL of the cover image",
                    "type": "string"
                },
                "currentManga": {
                    "$ref": "#/definitions/manga.Manga"
                },
                "id": {
                    "type": "integer"
                },
                "lastReadChapter": {
                    "$ref": "#/definitions/manga.Chapter"
                },
                "mangas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/manga.Manga"
                    }
                },
                "status": {
                    "description": "All mangas in the multimanga should have the same status",
                    "type": "integer"
                }
            }
        },
        "models.MangaSearchResult": {
            "type": "object",
            "properties": {
                "coverURL": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "internalID": {
                    "type": "string"
                },
                "lastChapter": {
                    "type": "string"
                },
                "lastChapterURL": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "routes.AddCustomMangaRequest": {
            "type": "object",
            "required": [
                "name",
                "status"
            ],
            "properties": {
                "cover_img": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "cover_img_url": {
                    "type": "string"
                },
                "last_read_chapter": {
                    "type": "object",
                    "properties": {
                        "chapter": {
                            "type": "string"
                        },
                        "url": {
                            "type": "string"
                        }
                    }
                },
                "last_released_chapter_name_selector": {
                    "$ref": "#/definitions/routes.HTMLSelectorRequest"
                },
                "last_released_chapter_url_selector": {
                    "$ref": "#/definitions/routes.HTMLSelectorRequest"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 0
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "routes.AddMangaRequest": {
            "type": "object",
            "required": [
                "status",
                "url"
            ],
            "properties": {
                "last_read_chapter": {
                    "type": "string"
                },
                "last_read_chapter_internal_id": {
                    "type": "string"
                },
                "last_read_chapter_url": {
                    "type": "string"
                },
                "manga_internal_id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 0
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "routes.AddMangaToMultiMangaRequest": {
            "type": "object",
            "required": [
                "manga_url"
            ],
            "properties": {
                "manga_internal_id": {
                    "type": "string"
                },
                "manga_url": {
                    "type": "string"
                }
            }
        },
        "routes.HTMLSelectorRequest": {
            "type": "object",
            "required": [
                "selector"
            ],
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "regex": {
                    "type": "string"
                },
                "selector": {
                    "type": "string"
                }
            }
        },
        "routes.LastReadChapterRequest": {
            "type": "object",
            "properties": {
                "chapter": {
                    "type": "string"
                },
                "internal_id": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "routes.SearchMangaRequest": {
            "type": "object",
            "required": [
                "q",
                "source"
            ],
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "q": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "routes.UpdateLastReleasedChapterSelectorsRequest": {
            "type": "object",
            "properties": {
                "name_selector": {
                    "$ref": "#/definitions/routes.HTMLSelectorRequest"
                },
                "url_selector": {
                    "$ref": "#/definitions/routes.HTMLSelectorRequest"
                }
            }
        },
        "routes.UpdateMangaLastReadChapterRequest": {
            "type": "object",
            "properties": {
                "chapter": {
                    "$ref": "#/definitions/routes.LastReadChapterRequest"
                }
            }
        },
        "routes.UpdateMangaStatusRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 0
                }
            }
        },
        "routes.responseMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
